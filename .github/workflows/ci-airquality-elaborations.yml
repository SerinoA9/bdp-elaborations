name: CI/CD airquality-elaborations

on:
  push:
    paths:
      - "./airquality-elaborations/**"
      - ".github/workflows/ci-airquality-elaborations.yml"
      - "!*.md"
  

env:
  WORKING_DIRECTORY: airquality-elaborations
  PROJECT_NAME: odh-mobility-el-airquality-elaborations
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/odh-mobility-el-airquality-elaborations
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: '8'

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Test code
        uses: noi-techpark/github-actions/maven-test@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          working-directory: ${{ env.WORKING_DIRECTORY }}
          test-command: 'mvn -B -U clean compile test'

  # Deploy Test
  deploy-test-airquality-elaborations:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-airquality-elaborations
    env:
      KEYCLOAK_URL: https://auth.opendatahub.testingmachine.eu
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m

          # Open Data Hub Writer Connectivity
          X_authorizationUri: ${{ env.KEYCLOAK_URL }}/auth
          X_tokenUri: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
          X_clientId: odh-mobility-datacollector
          X_clientName: odh-mobility-datacollector
          X_clientSecret: ${{ secrets.WRITER_CLIENT_SECRET_TEST }}
          X_scope: openid
          X_BASE_URI: https://mobility.share.opendatahub.testingmachine.eu/json

          # Open Data Hub API v2 Connectivity (ninja)
          X_NINJA_CLIENT: odh-mobility-airquality-elaboration
          X_NINJA_SECRET: ${{ secrets.NINJA_CLIENT_SECRET_TEST }}
          X_ODH_BASE_URI: https://mobility.api.opendatahub.testingmachine.eu/

          # Data collector recognition
          X_origin: a22-algorab
          X_stationtype: EnvironmentStation
          X_provenance_name: ${{ env.PROJECT_NAME }}
          X_provenance_version: ${{ github.sha }}

          # Logging
          X_LOG_LEVEL: info
          X_LOG_STYLE: json

          X_SCHEDULER_CRON: "30 5 * * * *"

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}


      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: 'test'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}


  # Deploy Production
  deploy-prod-vehicletraffic-bluetooth:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    concurrency: deploy-prod-vehicletraffic-bluetooth
    env:
      KEYCLOAK_URL: https://auth.opendatahub.bz.it
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m
          X_SERVER_PORT: 1007

          # Open Data Hub Writer Connectivity
          X_authorizationUri: ${{ env.KEYCLOAK_URL }}/auth
          X_tokenUri: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
          X_clientId: odh-mobility-datacollector
          X_clientName: odh-mobility-datacollector
          X_clientSecret: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_PROD }}
          X_scope: openid
          X_BASE_URI: https://mobility.share.opendatahub.bz.it/json

          # Logging
          X_LOG_LEVEL: "info"
          X_LOG_STYLE: json
          X_provenance_name: ${{ env.PROJECT_NAME }}
          X_provenance_version: ${{ github.sha }}

          X_SCHEDULER_FIXED_RATE: 3540000
          X_SCHEDULER_POOL_SIZE: 10

          X_encryption_key: ${{ secrets.VEHICLETRAFFIC_BLUETOOTH_ENCRYPTION_KEY }}

      - name: Retrieve secret files and decode it to a file
        env:
          STORED_CREDENTIALS_BASE64: ${{ secrets.VEHICLETRAFFIC_BLUETOOTH_STORED_CREDENTIAL_B64 }}
          GOOGLE_SECRET_BASE64: ${{ secrets.VEHICLETRAFFIC_BLUETOOTH_GOOGLE_SECRET_B64 }}
        run: |
          echo $STORED_CREDENTIALS_BASE64 | base64 -i --decode > data-collectors/vehicletraffic-bluetooth/src/main/resources/META-INF/credentials/StoredCredential
          echo $GOOGLE_SECRET_BASE64 | base64 -i --decode > data-collectors/vehicletraffic-bluetooth/src/main/resources/META-INF/spring/client_secret.json
          echo $GOOGLE_SECRET_BASE64 | base64 -i --decode > data-collectors/vehicletraffic-bluetooth/src/test/resources/META-INF/spring/client_secret.json

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}


      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: 'prod'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}


